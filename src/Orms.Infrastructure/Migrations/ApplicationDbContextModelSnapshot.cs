// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Orms.Persistence.Contexts;

#nullable disable

namespace Orms.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Orms.Domain.Entities.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasMaxLength(777)
                        .HasColumnType("nvarchar(777)");

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("PostId");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");
                });

            modelBuilder.Entity("Orms.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"), 1L, 1);

                    b.Property<DateTime>("DateInsert")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("Index_Name")
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            DateInsert = new DateTime(2022, 7, 14, 17, 0, 22, 904, DateTimeKind.Local).AddTicks(1310),
                            Name = "Edson",
                            Surname = "Catugy"
                        },
                        new
                        {
                            UserID = 2,
                            DateInsert = new DateTime(2022, 7, 14, 17, 0, 22, 904, DateTimeKind.Local).AddTicks(1343),
                            Name = "Carlos",
                            Surname = "Mendes"
                        },
                        new
                        {
                            UserID = 3,
                            DateInsert = new DateTime(2022, 7, 14, 17, 0, 22, 904, DateTimeKind.Local).AddTicks(1386),
                            Name = "Patrick",
                            Surname = "Siqueira"
                        },
                        new
                        {
                            UserID = 4,
                            DateInsert = new DateTime(2022, 7, 14, 17, 0, 22, 904, DateTimeKind.Local).AddTicks(1395),
                            Name = "Luciano",
                            Surname = "Silva"
                        });
                });

            modelBuilder.Entity("Orms.Domain.Entities.Post", b =>
                {
                    b.HasOne("Orms.Domain.Entities.User", null)
                        .WithMany("User_Post")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Orms.Domain.Entities.User", b =>
                {
                    b.Navigation("User_Post");
                });
#pragma warning restore 612, 618
        }
    }
}
